{"version":3,"sources":["components/WatchList/WatchList.js","common/Constants.js","components/MoviePreview/MoviePreview.js"],"names":["WatchList","props","cookies","Cookies","state","watchlist","promises","this","get","Constants","cookieWatchlist","map","id","omdbApiService","searchById","Promise","all","then","responses","setState","r","data","m","movie","key","imdbID","React","Component","MoviePreview","redirectToDetail","toggleWatchListMovieStyle","indexOf","className","alt","Title","src","Poster","to","Genre","Released","Ratings","Source","Value","onClick","toggleWatchlistMovie","bind","index","splice","push","set"],"mappings":"iPAOqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,QAAU,IAAIC,IACnB,EAAKC,MAAQ,CAAEC,UAAW,IAHX,E,iFAME,IAAD,OACVC,EAAWC,KAAKL,QAAQM,IAAIC,IAAUC,iBAAiBC,KAAI,SAAAC,GAAE,OAAIC,IAAeC,WAAWF,MACjGG,QAAQC,IAAIV,GACPW,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAEd,UAAWa,EAAUP,KAAI,SAAAS,GAAC,OAAIA,EAAEC,e,+BAKxD,OACI,6BACKd,KAAKH,MAAMC,UAAUM,KAAI,SAAAW,GAAC,OAAK,kBAAC,IAAD,CAAcC,MAAOD,EAAGE,IAAKF,EAAEG,iB,GAlBxCC,IAAMC,Y,gCCP7C,kCAAO,IAAMlB,EAAY,CACrBC,gBAAiB,e,8JCKAkB,E,YACjB,WAAY3B,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,QAAU,IAAIC,IACnB,EAAKC,MAAQ,CACTyB,kBAAkB,GALP,E,sEAST,IAAD,EACCP,EAAIf,KAAKN,MAAMsB,MACflB,EAAS,UAAGE,KAAKL,QAAQM,IAAIC,IAAUC,wBAA9B,QAAkD,GAC3DoB,EAA4BzB,EAAU0B,QAAQT,EAAEG,SAAW,EAAI,6BAA+B,8BACpG,OACI,yBAAKO,UAAU,WAAWR,IAAKF,EAAEG,QAC7B,yBAAKO,UAAU,SACX,yBAAKC,IAAKX,EAAEY,MAAOF,UAAU,YAAYG,IAAKb,EAAEc,UAEpD,yBAAKJ,UAAU,UACX,6BACI,kBAAC,IAAD,CAAMK,GAAE,wBAAmBf,EAAEG,SAAWH,EAAEY,QAE9C,uCAAaZ,EAAEgB,OACf,+CAAqBhB,EAAEiB,UACvB,yBAAKP,UAAU,OACVV,EAAEkB,QAAQ7B,KAAI,SAAAS,GAAC,OACZ,yBAAKY,UAAU,QAAQR,IAAKJ,EAAEqB,QAC1B,yBAAKT,UAAU,yBACX,yBAAKA,UAAU,UAAUZ,EAAEqB,QAC3B,yBAAKT,UAAU,SAASZ,EAAEsB,aAK1C,4BAAQV,UAAWF,EAA2Ba,QAASpC,KAAKqC,qBAAqBC,KAAKtC,OAAQF,EAAU0B,QAAQT,EAAEG,SAAW,EAAI,wBAA0B,wB,6CAOvK,IAAIpB,EAAYE,KAAKL,QAAQM,IAAIC,IAAUC,iBACtCL,IACDA,EAAY,IAGhB,IAAMyC,EAAQzC,EAAU0B,QAAQxB,KAAKN,MAAMsB,MAAME,QAC7CqB,GAAS,EACTzC,EAAU0C,OAAOD,EAAO,GAExBzC,EAAU2C,KAAKzC,KAAKN,MAAMsB,MAAME,QAEpClB,KAAKL,QAAQ+C,IAAIxC,IAAUC,gBAAiBL,GAC5CE,KAAKY,SAASZ,KAAKH,W,GAtDesB,IAAMC,Y","file":"static/js/5.3d8491b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './WatchList.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { Constants } from '../../common/Constants';\r\nimport MoviePreview from '../MoviePreview/MoviePreview';\r\nimport omdbApiService from '../../services/OmdbApiService.js';\r\n\r\nexport default class WatchList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = new Cookies();\r\n        this.state = { watchlist: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const promises = this.cookies.get(Constants.cookieWatchlist).map(id => omdbApiService.searchById(id));\r\n        Promise.all(promises)\r\n            .then(responses => {\r\n                this.setState({ watchlist: responses.map(r => r.data) });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.watchlist.map(m => (<MoviePreview movie={m} key={m.imdbID} />))}\r\n            </div>\r\n        );\r\n    }\r\n}","export const Constants = {\r\n    cookieWatchlist: 'watch-list'\r\n};","import React from 'react';\r\nimport './MoviePreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { Constants } from '../../common/Constants';\r\n\r\nexport default class MoviePreview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cookies = new Cookies();\r\n        this.state = {\r\n            redirectToDetail: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const m = this.props.movie;\r\n        const watchlist = this.cookies.get(Constants.cookieWatchlist) ?? [];\r\n        const toggleWatchListMovieStyle = watchlist.indexOf(m.imdbID) > -1 ? 'btn btn-sm btn-danger mt-1' : 'btn btn-sm btn-primary mt-1';\r\n        return (\r\n            <div className=\"row mt-2\" key={m.imdbID}>\r\n                <div className=\"col-2\">\r\n                    <img alt={m.Title} className=\"img-fluid\" src={m.Poster} />\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    <div>\r\n                        <Link to={`/movie-detail/${m.imdbID}`}>{m.Title}</Link>\r\n                    </div>\r\n                    <div>Genre: {m.Genre}</div>\r\n                    <div>Released date: {m.Released}</div>\r\n                    <div className=\"row\">\r\n                        {m.Ratings.map(r => (\r\n                            <div className=\"col-3\" key={r.Source}>\r\n                                <div className=\"rating d-inline-block\">\r\n                                    <div className=\"source\">{r.Source}</div>\r\n                                    <div className=\"value\">{r.Value}</div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button className={toggleWatchListMovieStyle} onClick={this.toggleWatchlistMovie.bind(this)}>{watchlist.indexOf(m.imdbID) > -1 ? 'Remove from watchlist' : 'Add to watchlist'}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggleWatchlistMovie() {\r\n        let watchlist = this.cookies.get(Constants.cookieWatchlist);\r\n        if (!watchlist) {\r\n            watchlist = [];\r\n        }\r\n\r\n        const index = watchlist.indexOf(this.props.movie.imdbID);\r\n        if (index > -1) {\r\n            watchlist.splice(index, 1);\r\n        } else {\r\n            watchlist.push(this.props.movie.imdbID);\r\n        }\r\n        this.cookies.set(Constants.cookieWatchlist, watchlist);\r\n        this.setState(this.state);\r\n    }\r\n}"],"sourceRoot":""}