{"version":3,"sources":["components/UpcomingMovies/UpcomingMovies.js","common/Constants.js","components/MoviePreview/MoviePreview.js"],"names":["UpcomingMovies","props","state","movies","moviePromises","split","map","m","omdbApiService","searchByName","Date","getFullYear","Promise","all","then","responses","result","Map","filteredResponses","filter","r","data","Response","Poster","has","imdbID","set","push","setState","sort","a","b","Released","header","this","length","movie","key","React","Component","Constants","cookieWatchlist","MoviePreview","cookies","Cookies","redirectToDetail","watchlist","get","toggleWatchListMovieStyle","indexOf","className","alt","Title","src","to","Genre","Ratings","Source","Value","onClick","toggleWatchlistMovie","bind","index","splice"],"mappings":"iOAKqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAAEC,OAAQ,IAFR,E,iFAKE,IAAD,OACZC,EAAgB,sBAAsBC,MAAM,IAAIC,KAAI,SAAAC,GAAC,OAAIC,IAAeC,aAAaF,GAAG,IAAIG,MAAOC,cAAe,YACtHC,QAAQC,IAAIT,GACPU,MAAK,SAAAC,GACF,IAAMC,EAAS,GACTV,EAAM,IAAIW,IACVC,EAAoBH,EACrBI,QAAO,SAAAC,GAAC,MAAwB,UAApBA,EAAEC,KAAKC,UAA0C,QAAlBF,EAAEC,KAAKE,UAAkBjB,KAAI,SAAAc,GAAC,OAAIA,EAAEC,QAJrE,uBAKf,YAAiBH,EAAjB,+CAAoC,CAAC,IAA5BG,EAA2B,QAC3Bf,EAAIkB,IAAIH,EAAKI,UACdnB,EAAIoB,IAAIL,EAAKI,QAAQ,GACrBT,EAAOW,KAAKN,KARL,kFAgBf,EAAKO,SAAS,CACVzB,OAAQa,EAAOa,MANE,SAACC,EAAGC,GAGrB,OAFkB,IAAIrB,KAAoB,QAAfoB,EAAEE,SAAqB,OAAmBF,EAAEE,UACrD,IAAItB,KAAoB,QAAfqB,EAAEC,SAAqB,OAAmBD,EAAEC,WACvC,EAAI,Y,+BAShD,IAAIC,EAASC,KAAKhC,MAAMC,OAAOgC,OAAS,EAA3B,yBAAgD,IAAIzB,MAAOC,eAAkB,GAC1F,OACI,oCACI,4BAAKsB,GACJC,KAAKhC,MAAMC,OAAOG,KAAI,SAAAC,GAAC,OAAK,kBAAC,IAAD,CAAc6B,MAAO7B,EAAG8B,IAAK9B,EAAEkB,iB,GApChCa,IAAMC,Y,gCCLlD,kCAAO,IAAMC,EAAY,CACrBC,gBAAiB,e,8JCKAC,E,YACjB,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KAED0C,QAAU,IAAIC,IACnB,EAAK1C,MAAQ,CACT2C,kBAAkB,GALP,E,sEAST,IAAD,EACCtC,EAAI2B,KAAKjC,MAAMmC,MACfU,EAAS,UAAGZ,KAAKS,QAAQI,IAAIP,IAAUC,wBAA9B,QAAkD,GAC3DO,EAA4BF,EAAUG,QAAQ1C,EAAEkB,SAAW,EAAI,6BAA+B,8BACpG,OACI,yBAAKyB,UAAU,WAAWb,IAAK9B,EAAEkB,QAC7B,yBAAKyB,UAAU,SACX,yBAAKC,IAAK5C,EAAE6C,MAAOF,UAAU,YAAYG,IAAK9C,EAAEgB,UAEpD,yBAAK2B,UAAU,UACX,6BACI,kBAAC,IAAD,CAAMI,GAAE,wBAAmB/C,EAAEkB,SAAWlB,EAAE6C,QAE9C,uCAAa7C,EAAEgD,OACf,+CAAqBhD,EAAEyB,UACvB,yBAAKkB,UAAU,OACV3C,EAAEiD,QAAQlD,KAAI,SAAAc,GAAC,OACZ,yBAAK8B,UAAU,QAAQb,IAAKjB,EAAEqC,QAC1B,yBAAKP,UAAU,yBACX,yBAAKA,UAAU,UAAU9B,EAAEqC,QAC3B,yBAAKP,UAAU,SAAS9B,EAAEsC,aAK1C,4BAAQR,UAAWF,EAA2BW,QAASzB,KAAK0B,qBAAqBC,KAAK3B,OAAQY,EAAUG,QAAQ1C,EAAEkB,SAAW,EAAI,wBAA0B,wB,6CAOvK,IAAIqB,EAAYZ,KAAKS,QAAQI,IAAIP,IAAUC,iBACtCK,IACDA,EAAY,IAGhB,IAAMgB,EAAQhB,EAAUG,QAAQf,KAAKjC,MAAMmC,MAAMX,QAC7CqC,GAAS,EACThB,EAAUiB,OAAOD,EAAO,GAExBhB,EAAUnB,KAAKO,KAAKjC,MAAMmC,MAAMX,QAEpCS,KAAKS,QAAQjB,IAAIc,IAAUC,gBAAiBK,GAC5CZ,KAAKN,SAASM,KAAKhC,W,GAtDeoC,IAAMC,Y","file":"static/js/4.af67cbfa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './UpcomingMovies.css';\r\nimport omdbApiService from '../../services/OmdbApiService.js';\r\nimport MoviePreview from '../MoviePreview/MoviePreview.js';\r\n\r\nexport default class UpcomingMovies extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { movies: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let moviePromises = 'qwertyuiopasdfghjkl'.split('').map(m => omdbApiService.searchByName(m, new Date().getFullYear(), 'movie'));\r\n        Promise.all(moviePromises)\r\n            .then(responses => {\r\n                const result = [];\r\n                const map = new Map();\r\n                const filteredResponses = responses\r\n                    .filter(r => r.data.Response !== 'False' && r.data.Poster !== 'N/A').map(r => r.data);\r\n                for (let data of filteredResponses) {\r\n                    if (!map.has(data.imdbID)) {\r\n                        map.set(data.imdbID, true);\r\n                        result.push(data);\r\n                    }\r\n                }\r\n                const sortFunction = (a, b) => {\r\n                    const aReleased = new Date(a.Released === 'N/A' ? 8640000000000000 : a.Released);\r\n                    const bReleased = new Date(b.Released === 'N/A' ? 8640000000000000 : b.Released);\r\n                    return aReleased < bReleased ? -1 : 1;\r\n                };\r\n                this.setState({\r\n                    movies: result.sort(sortFunction)});\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        let header = this.state.movies.length > 0 ? `New movies in ${new Date().getFullYear()}` : '';\r\n        return (\r\n            <>\r\n                <h1>{header}</h1>\r\n                {this.state.movies.map(m => (<MoviePreview movie={m} key={m.imdbID} />))}\r\n            </>\r\n        );\r\n    }\r\n}","export const Constants = {\r\n    cookieWatchlist: 'watch-list'\r\n};","import React from 'react';\r\nimport './MoviePreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { Constants } from '../../common/Constants';\r\n\r\nexport default class MoviePreview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cookies = new Cookies();\r\n        this.state = {\r\n            redirectToDetail: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const m = this.props.movie;\r\n        const watchlist = this.cookies.get(Constants.cookieWatchlist) ?? [];\r\n        const toggleWatchListMovieStyle = watchlist.indexOf(m.imdbID) > -1 ? 'btn btn-sm btn-danger mt-1' : 'btn btn-sm btn-primary mt-1';\r\n        return (\r\n            <div className=\"row mt-2\" key={m.imdbID}>\r\n                <div className=\"col-2\">\r\n                    <img alt={m.Title} className=\"img-fluid\" src={m.Poster} />\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    <div>\r\n                        <Link to={`/movie-detail/${m.imdbID}`}>{m.Title}</Link>\r\n                    </div>\r\n                    <div>Genre: {m.Genre}</div>\r\n                    <div>Released date: {m.Released}</div>\r\n                    <div className=\"row\">\r\n                        {m.Ratings.map(r => (\r\n                            <div className=\"col-3\" key={r.Source}>\r\n                                <div className=\"rating d-inline-block\">\r\n                                    <div className=\"source\">{r.Source}</div>\r\n                                    <div className=\"value\">{r.Value}</div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button className={toggleWatchListMovieStyle} onClick={this.toggleWatchlistMovie.bind(this)}>{watchlist.indexOf(m.imdbID) > -1 ? 'Remove from watchlist' : 'Add to watchlist'}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggleWatchlistMovie() {\r\n        let watchlist = this.cookies.get(Constants.cookieWatchlist);\r\n        if (!watchlist) {\r\n            watchlist = [];\r\n        }\r\n\r\n        const index = watchlist.indexOf(this.props.movie.imdbID);\r\n        if (index > -1) {\r\n            watchlist.splice(index, 1);\r\n        } else {\r\n            watchlist.push(this.props.movie.imdbID);\r\n        }\r\n        this.cookies.set(Constants.cookieWatchlist, watchlist);\r\n        this.setState(this.state);\r\n    }\r\n}"],"sourceRoot":""}