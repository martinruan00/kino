{"version":3,"sources":["components/MovieDetail/MovieDetail.js"],"names":["MovieDetail","props","movieProperties","seriesProperties","state","movie","componentDidMount","bind","omdbApiService","searchById","this","match","params","id","then","resp","setState","data","m","detail","properties","Type","Object","keys","map","k","indexOf","className","Title","alt","src","Poster","React","Component"],"mappings":"yNAGqBA,E,YAIjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAJVC,gBAAkB,CAAC,OAAQ,QAAS,WAAY,UAAW,QAAS,WAAY,SAAU,SAAU,OAAQ,WAAY,UAAW,SAAU,MAAO,YAAa,aAAc,WAG5J,EAFnBC,iBAAmB,CAAC,OAAQ,QAAS,WAAY,UAAW,QAAS,WAAY,SAAU,SAAU,OAAQ,WAAY,UAAW,SAAU,gBAI1I,EAAKC,MAAQ,CACTC,MAAO,MAEX,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBALV,E,iFAQE,IAAD,OAChBC,IAAeC,WAAWC,KAAKT,MAAMU,MAAMC,OAAOC,IAC7CC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAAEX,MAAOU,EAAKE,Y,+BAKpC,IAAMC,EAAIR,KAAKN,MAAMC,MACrB,IAAKa,EACD,OAAQ,KACZ,IAAIC,EAAS,qCACPC,EAAwB,UAAXF,EAAEG,KAAmBX,KAAKR,gBAA8B,WAAXgB,EAAEG,KAAoBX,KAAKP,iBAAmB,KAI9G,OAHIiB,IACAD,EAASG,OAAOC,KAAKL,GAAGM,KAAI,SAAAC,GAAC,OAAIL,EAAWM,QAAQD,IAAM,EAAK,6BAAK,gCAASA,GAAd,KAA4BP,EAAEO,IAAa,yCAG1G,yBAAKE,UAAU,OACX,wBAAIA,UAAU,UAAUjB,KAAKN,MAAMC,MAAMuB,OACzC,yBAAKD,UAAU,SACX,yBAAKE,IAAKnB,KAAKN,MAAMC,MAAMuB,MAAOD,UAAU,eAAeG,IAAKpB,KAAKN,MAAMC,MAAM0B,UAErF,yBAAKJ,UAAU,UACX,yBAAKA,UAAU,cACVR,S,GApCgBa,IAAMC","file":"static/js/6.98af3fe9.chunk.js","sourcesContent":["import React from 'react';\r\nimport omdbApiService from '../../services/OmdbApiService.js';\r\n\r\nexport default class MovieDetail extends React.Component {\r\n    movieProperties = ['Year', 'Rated', 'Released', 'Runtime', 'Genre', 'Director', 'Writer', 'Actors', 'Plot', 'Language', 'Country', 'Awards', 'DVD', 'BoxOffice', 'Production', 'Website'];\r\n    seriesProperties = ['Year', 'Rated', 'Released', 'Runtime', 'Genre', 'Director', 'Writer', 'Actors', 'Plot', 'Language', 'Country', 'Awards', 'totalSeasons'];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: null\r\n        };\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        omdbApiService.searchById(this.props.match.params.id)\r\n            .then(resp => {\r\n                this.setState({ movie: resp.data });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const m = this.state.movie;\r\n        if (!m)\r\n            return (null);\r\n        let detail = <></>;\r\n        const properties = m.Type === 'movie' ? this.movieProperties : (m.Type === 'series' ? this.seriesProperties : null);\r\n        if (properties) {\r\n            detail = Object.keys(m).map(k => properties.indexOf(k) > -1 ? (<div><strong>{k}</strong>: {m[k]}</div>) : <></>);\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <h1 className=\"col-12\">{this.state.movie.Title}</h1>\r\n                <div className=\"col-2\">\r\n                    <img alt={this.state.movie.Title} className=\"movie-poster\" src={this.state.movie.Poster} />\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    <div className=\"float-left\">\r\n                        {detail}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}